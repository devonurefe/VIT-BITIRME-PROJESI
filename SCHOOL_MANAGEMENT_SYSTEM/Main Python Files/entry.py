# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'entry.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import sys
from PyQt5 import QtCore, QtGui, QtWidgets
from loginstudent import Ui_StudentWindow
from loginteacher import Ui_TeacherWindow


class Ui_EntryWindow(object):
    def setupUi(self, EntryWindow):
        EntryWindow.setObjectName("EntryWindow")
        EntryWindow.resize(800, 600)
        EntryWindow.setMinimumSize(QtCore.QSize(800, 600))
        EntryWindow.setMaximumSize(QtCore.QSize(800, 600))
        EntryWindow.setStyleSheet("")
        self.centralwidget = QtWidgets.QWidget(EntryWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.StudentButton = QtWidgets.QPushButton(self.centralwidget)
        self.StudentButton.setGeometry(QtCore.QRect(160, 240, 160, 60))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.StudentButton.setFont(font)
        self.StudentButton.setStyleSheet("QPushButton{\n"
                                         "    background-color: rgb(143, 106, 185);\n"
                                         "    color: rgb(245, 240, 218);\n"
                                         "}\n"
                                         "QPushButton::hover{\n"
                                         "    background-color: rgb(115, 80, 139);\n"
                                         "    color: rgb(245, 240, 218);\n"
                                         "}\n"
                                         "QPushButton::pressed{\n"
                                         "    background-color: rgb(81, 65, 108);\n"
                                         "    padding-left:5px;\n"
                                         "    color: rgb(245, 240, 218);\n"
                                         "    padding-top:5px;\n"
                                         "}")
        self.StudentButton.setObjectName("StudentButton")
        self.TeacherButton = QtWidgets.QPushButton(self.centralwidget)
        self.TeacherButton.setGeometry(QtCore.QRect(480, 240, 160, 60))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.TeacherButton.setFont(font)
        self.TeacherButton.setStyleSheet("QPushButton{\n"
                                         "    background-color: rgb(143, 106, 185);\n"
                                         "    color: rgb(245, 240, 218);\n"
                                         "}\n"
                                         "QPushButton::hover{\n"
                                         "    background-color: rgb(115, 80, 139);\n"
                                         "    color: rgb(245, 240, 218);\n"
                                         "}\n"
                                         "QPushButton::pressed{\n"
                                         "    background-color: rgb(81, 65, 108);\n"
                                         "    padding-left:5px;\n"
                                         "    color: rgb(245, 240, 218);\n"
                                         "    padding-top:5px;\n"
                                         "}")
        self.TeacherButton.setObjectName("TeacherButton")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(0, -20, 800, 600))
        self.label.setStyleSheet("background-color: rgb(172, 223, 230);")
        self.label.setText("")
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(200, 60, 400, 91))
        font = QtGui.QFont()
        font.setPointSize(25)
        self.label_2.setFont(font)
        self.label_2.setStyleSheet("color:  rgb(143, 106, 185);")
        self.label_2.setAlignment(QtCore.Qt.AlignCenter)
        self.label_2.setObjectName("label_2")
        self.label.raise_()
        self.StudentButton.raise_()
        self.TeacherButton.raise_()
        self.label_2.raise_()
        EntryWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(EntryWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 26))
        self.menubar.setObjectName("menubar")
        EntryWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(EntryWindow)
        self.statusbar.setObjectName("statusbar")
        EntryWindow.setStatusBar(self.statusbar)

        self.retranslateUi(EntryWindow)
        QtCore.QMetaObject.connectSlotsByName(EntryWindow)

    def retranslateUi(self, EntryWindow):
        _translate = QtCore.QCoreApplication.translate
        EntryWindow.setWindowTitle(_translate("EntryWindow", "MainWindow"))
        self.StudentButton.setText(_translate("EntryWindow", "STUDENT"))
        self.TeacherButton.setText(_translate("EntryWindow", "TEACHER"))
        self.label_2.setText(_translate("EntryWindow", "VIT SCHOOL"))

#########################################################################################################################
        # StudentButton ile openStudentWindow fonksiyonunu bağlamak için
        self.StudentButton.clicked.connect(self.openStudentWindow)

        # TeacherButton ile openTeacherWindow fonksiyonunu bağlamak için
        self.TeacherButton.clicked.connect(self.openTeacherWindow)

    # Student penceresini açmak için kullanılan fonksiyon
    def openStudentWindow(self):
        # Yeni bir QMainWindow örneği oluşturuluyor ve StudentWindow değişkenine atanıyor.
        self.StudentWindow = QtWidgets.QMainWindow()
        # Ui_StudentWindow sınıfından bir örneğin oluşturuluyor ve ui değişkenine atanıyor.
        self.ui = Ui_StudentWindow()
        # Ui_StudentWindow örneği üzerindeki setupUi metodunu çağırarak, StudentWindow örneğini ayarlar.
        self.ui.setupUi(self.StudentWindow)
        # Oluşturulan Student penceresini gösterir.
        self.StudentWindow.show()

    def openTeacherWindow(self):
        self.TeacherWindow = QtWidgets.QMainWindow()
        self.ui = Ui_TeacherWindow()
        self.ui.setupUi(self.TeacherWindow)
        self.TeacherWindow.show()


#####################################################################################################################################

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    EntryWindow = QtWidgets.QMainWindow()
    ui = Ui_EntryWindow()
    ui.setupUi(EntryWindow)
    EntryWindow.show()
    sys.exit(app.exec_())
